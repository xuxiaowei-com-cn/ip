stages:
  - build

build:
  stage: build
  image: maven:3.6.3-openjdk-17
  variables:
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
    MAVEN_CLI_OPTS: >-
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      --no-transfer-progress
      -DinstallAtEnd=true
      -DdeployAtEnd=true
  script:
    - free -h || cat /proc/meminfo
    - mvn -v
    - mvn clean package -DskipTests=true -s settings.xml
    - free -h || cat /proc/meminfo
  artifacts:
    name: build
    paths:
      - target/*.jar
  cache:
    paths:
      - .m2/repository

build:docker:
  stage: build
  needs:
    - job: build
      artifacts: true
  image: docker:cli
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$VERSION-$CI_PIPELINE_ID
    GROUP_ID: cn.com.xuxiaowei.ip
    ARTIFACT_ID: ip
    VERSION: 0.0.1-SNAPSHOT
    CI_JAVA_OPTS: -Xms256m -Xmx512m
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - ls target
    - >-
      docker build --pull -t "$DOCKER_IMAGE_NAME" .
      --build-arg GROUP_ID=${GROUP_ID}
      --build-arg ARTIFACT_ID=${ARTIFACT_ID}
      --build-arg VERSION=${VERSION}
      --build-arg CI_PIPELINE_URL=${CI_PIPELINE_URL}
      --build-arg CI_JOB_ID=${CI_JOB_ID}
      --build-arg JAVA_OPTS="${CI_JAVA_OPTS}"
      --build-arg APP_ARGS=${APP_ARGS}
    - docker images
    - docker push "$DOCKER_IMAGE_NAME"
