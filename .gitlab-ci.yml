stages:
  - build
  - build-docker
  - build-deploy
  - sync

variables:
  DOCKER_IMAGE_NAME: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/ip:$VERSION-$CI_PIPELINE_ID
  GROUP_ID: cn.com.xuxiaowei.ip
  ARTIFACT_ID: ip
  VERSION: 0.0.2-SNAPSHOT
  CI_JAVA_OPTS: -Xms256m -Xmx512m

build:
  stage: build
  #image: maven:3.6.3-openjdk-17
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/mvnd:1.0.1-dragonwell-17-anolis
  variables:
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
    MAVEN_CLI_OPTS: >-
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      --no-transfer-progress
      -DinstallAtEnd=true
      -DdeployAtEnd=true
    SETTINGS_XML_PATH: settings.xml
  script:
    - echo $SETTINGS_XML_PATH
    - free -h || cat /proc/meminfo
    - mvnd -v
    - mvnd clean package -DskipTests=true -s $SETTINGS_XML_PATH $MAVEN_OPTS
    - free -h || cat /proc/meminfo
  artifacts:
    name: build
    paths:
      - target/*.jar
  cache:
    paths:
      - .m2/repository

build:docker:
  stage: build-docker
  needs:
    - job: build
      artifacts: true
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/docker:26.1.3-cli
  before_script:
    - ls /run/docker.sock || echo "/run/docker.sock 不存在"
    - echo $DOCKER_HOST
    - docker info
    - docker login -u $ACR_REGISTRY_USER -p $ACR_REGISTRY_PASSWORD registry.cn-qingdao.aliyuncs.com
  script:
    - ls -l target
    - >-
      docker build --pull -t "$DOCKER_IMAGE_NAME" .
      --build-arg GROUP_ID=${GROUP_ID}
      --build-arg ARTIFACT_ID=${ARTIFACT_ID}
      --build-arg VERSION=${VERSION}
      --build-arg CI_PIPELINE_URL=${CI_PIPELINE_URL}
      --build-arg CI_JOB_ID=${CI_JOB_ID}
      --build-arg JAVA_OPTS="${CI_JAVA_OPTS}"
      --build-arg APP_ARGS=${APP_ARGS}
    - docker images | grep ip
    - docker push "$DOCKER_IMAGE_NAME"
    - docker images | grep ip | awk '{print $3}' | xargs docker rmi || echo
    - docker images | grep ip || echo

build:deploy:
  stage: build-deploy
  needs:
    - job: build:docker
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/docker:26.1.3-cli
  before_script:
    - ls /run/docker.sock || echo "/run/docker.sock 不存在"
    - echo $DOCKER_HOST
    - docker info
    - docker login -u $ACR_REGISTRY_USER -p $ACR_REGISTRY_PASSWORD registry.cn-qingdao.aliyuncs.com
  script:
    - docker compose up -d
    - docker images | grep ip
    - docker images | grep ip | awk '{print $3}' | xargs docker rmi || echo
    - docker images | grep ip || echo
  environment: production
  tags:
    - lighthouse-docker

include:
  - /sync.yml
